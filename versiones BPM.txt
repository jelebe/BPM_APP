HECHO 1.2.1 cambiar icono por punto azul

HECHO 1.2.2 Animaciones suaves:  Añade transiciones suaves entre actividades y fragmentos para mejorar la experiencia del usuario.
            EN EL FEED. DEJAR PRESIONADO Y QUE LA POLAARIOD SE AGRANDE UN POCO


HECHO 1.3.1 cambiar a 4 decimales la ubicacion

HECHO 1.3.2 Tamaño máximo de imagen:  Limita el tamaño máximo de las imágenes que los usuarios pueden subir para evitar problemas de rendimiento.

HECHO 1.3.3 Hacer fotos directamente desde la app.

HECHO 1.3.4 Cambio color botón flotante al estido de la app.  (hecho en el branch de 1.3.3)
            Cambio de fuente en el feed.


HECHO 1.4.1 Cambios en Firebase. Añadimos ciudad y país para poder filtrar.


HECHO 1.4.2 Filtro en el FeedFragment:  Añade opciones para filtrar los marcadores por fecha, ubicación o descripción en el FeedFragment.


HECHO 1.4.3 Cambiar la relación de aspecto de la imagen: Ahora se selecciona qué parte de la foto se sube para que quede todo dentro de la polariod.


HECHO 1.4.4  Clusterización de marcadores:  Si hay muchos marcadores cercanos, considera agruparlos usando una librería de clusterización para evitar saturar el mapa.
             Carga diferida de marcadores:  Actualmente, todos los marcadores se cargan al iniciar el mapa. Implementa una carga diferida basada en la región visible del mapa para mejorar el rendimiento.


HECHO 1.5.1 Actualización automática.


HECHO 1.5.2 Ubicaciones más precisas. Modificar boton de mapa y corazón.
            Zoom inicial dinámico:  En lugar de centrar siempre en Madrid, detecta la ubicación del usuario (si está disponible) y ajusta el zoom inicial según su posición.


1.6.1 Notificaciones push:  Implementa notificaciones para informar a los usuarios sobre nuevos marcadores o actualizaciones.


1.7.1 Edición/eliminación de marcadores:  Permite a los usuarios editar o eliminar sus propios marcadores después de crearlos.


1.8.1 Glide optimizado:  Configura Glide para usar caché de imágenes y evitar descargar imágenes repetidamente.


1.9.1 Modo offline:  Guarda los marcadores localmente para que los usuarios puedan verlos sin conexión.


1.10.1 Paginación en Firebase:  Si la cantidad de marcadores crece considerablemente, implementa paginación para cargar datos de Firebase por lotes y evitar sobrecargar la memoria.


1.10.2 Compresión de imágenes:  Comprime las imágenes antes de subirlas a Firebase Storage para reducir el consumo de datos y mejorar el tiempo de carga.